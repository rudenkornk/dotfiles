# About "trusted" working:
#
# There are two kinds of secrets: local and host (aka remote).
# Local secrets are used directly as arguments of some Ansible tasks and thus
# they have to be decrypted on the controlling machine.
# Remote secrets, as the name suggests, must be decrypted and presented on the remote machine.
# Remote secrets are usually meant as more sensitive than local ones,
# and are only decrypted if the remote machine is "trusted".
# Local secrets on the other hand, are less sensitive.
# They can be used for or put to the remote machine even if it is not trusted.
#
# Examples of local secrets:
# - Target user password on the remote host. It does not need to be actually presented on the remote host,
#   but in order to set it, it must be decrypted on the controlling machine.
# - SSH public key to set it in ~/.ssh/authorized_keys on the remote host.
#   Though it is physically will be presented on the remote host,
#   it is not really sensitive and is also needed as an argument for authorized_key ansible task.
# - SSH port to set for SSH connection to the remote host.
#
# Examples of remote secrets:
# - Private SSH keys put in ~/.ssh folder on the remote host.
# - VPN and proxy configs.
# - GPG keys.
#
# This role is mostly a "remote secrets" role, i.e. it decrypts sensitive secrets on the remote machine,
# and it does so only for the "trusted" hosts.
# In local scenarios it acts both as local and remote secrets decryptor.
# This allows to configure local machine in one go.

- name: Create ~/.config/dotfiles-proxy directory
  ansible.builtin.file:
    path: "{{ home }}/.config/dotfiles-proxy"
    state: directory
    mode: "0o755"

- name: Create symlink to proxy.auth
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/proxy.sh.sops"
    dest: "{{ home }}/.config/dotfiles-proxy/proxy.sh.sops"
    state: link

- name: Install ldap client
  become: true
  ansible.builtin.package:
    name:
      - "{{ {'Ubuntu': 'ldap-utils', 'Fedora': 'openldap-clients'}[ansible_distribution] }}"

- name: Create ~/.config/ldap directory
  ansible.builtin.file:
    path: "{{ home }}/.config/ldap"
    state: directory
    mode: "0o755"

- name: Create symlink to ldap creds
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/ldap.auth.sops.json"
    dest: "{{ home }}/.config/ldap/ldap.auth.sops.json"
    state: link

- name: Set up bash
  ansible.builtin.lineinfile:
    path: "{{ home }}/.bashrc"
    regexp: "source .*/{{ role_name }}/files"
    line: source {{ role_host_path }}/files/bash.sh

- name: Create symlink to fish config
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/{{ role_name }}.fish"
    dest: "{{ home }}/.config/fish/conf.d/{{ role_name }}.fish"
    state: link

- name: Create symlinks to fish functions
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/fish_functions/{{ item | basename }}"
    dest: "{{ home }}/.config/fish/functions/{{ item | basename }}"
    state: link
  loop: "{{ lookup('fileglob', '{{ role_path }}/files/fish_functions/*', wantlist=True) }}"
