- name: Download neovim
  ansible.builtin.unarchive:
    src: "{{ manifest.neovim.url }}"
    dest: "{{ home }}/.local"
    remote_src: true
  retries: "{{ web_retries }}"
  delay: "{{ web_delay }}"
  register: neovim_downloaded
  until: neovim_downloaded is not failed
  # For some exceptionally stupid reason, this task reports changed=True
  # after docker role executes its main installation step
  # Specifically, this one:
  # https://github.com/rudenkornk/dotfiles/blob/f2f8fdfed1ab0973a428d49f1c5b448c28e59cb7/roles/docker/tasks/main.yaml#L61
  # Other tasks from any other roles do not have such impact
  # (though I did not check this for sure, just bisected to this task)
  # Thus, placing here "changed_when: false"
  changed_when: false

- name: Create symlink to proxied nvim binary
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/nvim-proxied.sh"
    dest: "{{ home }}/.local/bin/nvim"
    state: link

- name: Install vim as a backup
  become: true
  ansible.builtin.package:
    name: vim

- name: Install neovim gem
  become: true
  community.general.gem:
    name: neovim
  when: ansible_distribution == "Ubuntu" or
    (ansible_distribution == "Fedora" and ansible_distribution_version is version('40', '>='))

- name: Install node.js packages
  become: true
  community.general.npm:
    name: "{{ item }}"
    global: true
  when: false # broken
  loop:
    - neovim
    - npm-groovy-lint

- name: Install perl neovim package
  become: true
  community.general.cpanm:
    name: Neovim::Ext
  # TODO: enable this
  when: false

- name: Install tree-sitter-cli
  ansible.builtin.shell: |
    {{ home }}/.cargo/bin/cargo install tree-sitter-cli 2>&1
  args:
    executable: bash
  register: neovim_status
  retries: "{{ web_retries }}"
  delay: "{{ web_delay }}"
  until: neovim_status is not failed
  changed_when: "'already installed' not in neovim_status.stdout"

- name: Install NvChad 2
  block:
    - name: Install NvChad 2
      ansible.builtin.git:
        repo: "{{ manifest.nvchad2.url }}"
        dest: "{{ neovim_base }}_2/config"
        version: "{{ manifest.nvchad2.version }}"
        force: true
      register: neovim_nvchad_installed
      retries: "{{ web_retries }}"
      delay: "{{ web_delay }}"
      until: neovim_nvchad_installed is not failed
      changed_when: neovim_nvchad_installed.before != neovim_nvchad_installed.after

    - name: Create symlink to NvChad config
      ansible.builtin.file:
        src: "{{ role_host_path }}/files/nvchad2"
        dest: "{{ neovim_base }}_2/config/lua/custom"
        state: link
        force: true

    - name: Create neovim keymap directory
      ansible.builtin.file:
        path: "{{ neovim_base }}_2/config/keymap"
        state: directory
        mode: "0o755"

    - name: Create symlink to rnk keymap
      ansible.builtin.file:
        src: "{{ dotfiles_host_path }}/roles/keyboard_layouts/files/rnk-qwerty-jcuken.vim"
        dest: "{{ neovim_base }}_2/config/keymap/rnk-qwerty-jcuken.vim"
        state: link
        force: true

    - name: Set up clipboard for neovim
      ansible.builtin.template:
        src: clipboard.lua
        dest: "{{ neovim_base }}_2/config/lua/custom/clipboard.lua"
        mode: "0o644"

- name: Install LazyVim
  block:
    - name: Install lazy.nvim
      ansible.builtin.git:
        repo: "https://github.com/folke/lazy.nvim"
        dest: "{{ neovim_base }}_3/share/lazy/lazy.nvim"
        version: "{{ neovim_lazy_lock['lazy.nvim'].commit }}"
        force: true
      vars:
        neovim_lazy_lock: "{{ lookup('file', 'lazy/lazy-lock.json') | from_json }}"
      register: neovim_lazy
      retries: "{{ web_retries }}"
      delay: "{{ web_delay }}"
      until: neovim_lazy is not failed
      changed_when: neovim_lazy.before != neovim_lazy.after

    - name: Create config directory for lazy
      ansible.builtin.file:
        path: "{{ neovim_base }}_3"
        state: directory
        mode: "0o755"

    - name: Create symlink to LazyVim config
      ansible.builtin.file:
        src: "{{ role_host_path }}/files/lazy"
        dest: "{{ neovim_base }}_3/config"
        state: link
        force: true

    - name: Set up clipboard for neovim
      ansible.builtin.template:
        src: clipboard.lua
        dest: "{{ neovim_base }}_3/config/lua/config/clipboard.lua"
        mode: "0o644"

- name: Install LazyVim experiments
  block:
    - name: Install lazy.nvim
      ansible.builtin.git:
        repo: "https://github.com/folke/lazy.nvim"
        dest: "{{ neovim_base }}_4/share/lazy/lazy.nvim"
        version: "{{ neovim_lazy_lock['lazy.nvim'].commit }}"
        force: true
      vars:
        neovim_lazy_lock: "{{ lookup('file', 'lazy/lazy-lock.json') | from_json }}"
      register: neovim_lazy
      retries: "{{ web_retries }}"
      delay: "{{ web_delay }}"
      until: neovim_lazy is not failed
      changed_when: neovim_lazy.before != neovim_lazy.after

    - name: Create config directory for lazy
      ansible.builtin.file:
        path: "{{ neovim_base }}_4"
        state: directory
        mode: "0o755"

    - name: Create symlink to LazyVim config
      ansible.builtin.file:
        src: "{{ role_host_path }}/files/lazy_exp"
        dest: "{{ neovim_base }}_4/config"
        state: link
        force: true

    - name: Set up clipboard for neovim
      ansible.builtin.template:
        src: clipboard.lua
        dest: "{{ neovim_base }}_4/config/lua/config/clipboard.lua"
        mode: "0o644"

- name: Simple configuration version management
  block:
    - name: Create global directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0o755"
      loop:
        - "{{ home }}/.cache"
        - "{{ home }}/.config"
        - "{{ home }}/.local/share"

    - name: Create neovim configuration directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0o755"
      loop:
        - "{{ neovim_base }}_{{ neovim_version }}/cache"
        - "{{ neovim_base }}_{{ neovim_version }}/share"

    - name: Create neovim configuration symlinks
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "{{ neovim_base }}_{{ neovim_version }}/cache", dest: "{{ home }}/.cache/nvim" }
        - { src: "{{ neovim_base }}_{{ neovim_version }}/config", dest: "{{ home }}/.config/nvim" }
        - { src: "{{ neovim_base }}_{{ neovim_version }}/share", dest: "{{ home }}/.local/share/nvim" }

- name: Set up bash
  ansible.builtin.lineinfile:
    path: "{{ home }}/.bashrc"
    regexp: "source .*/{{ role_name }}/files"
    line: source {{ role_host_path }}/files/bash.sh

- name: Create symlink to fish config of {{ role_name }}
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/{{ role_name }}.fish"
    dest: "{{ home }}/.config/fish/conf.d/{{ role_name }}.fish"
    state: link

- name: Create symlinks to fish functions
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/fish_functions/{{ item | basename }}"
    dest: "{{ home }}/.config/fish/functions/{{ item | basename }}"
    state: link
  loop: "{{ lookup('fileglob', '{{ role_path }}/files/fish_functions/*', wantlist=True) }}"
