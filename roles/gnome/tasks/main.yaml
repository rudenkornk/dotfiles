- name: Install dconf packages
  become: true
  ansible.builtin.package:
    name:
      - "{{ {'Ubuntu': 'dconf-cli', 'Fedora': 'dconf'}[ansible_distribution] }}"
      - dconf-editor
      - dbus
      - "{{ {'Ubuntu': 'dbus', 'Fedora': 'dbus-daemon'}[ansible_distribution] }}"
      - "{{ {'Ubuntu': 'dbus', 'Fedora': 'dbus-tools'}[ansible_distribution] }}"

- name: Install python support packages
  become: true
  ansible.builtin.package:
    name:
      - python3-psutil
      - "{{ {'Ubuntu': 'python3-gi', 'Fedora': 'python3-gobject'}[ansible_distribution] }}"

- name: Configure gnome
  community.general.dconf:
    key: "{{ item.key }}"
    # string filter is important here, see notes for the dconf module:
    # https://docs.ansible.com/ansible/latest/collections/community/general/dconf_module.html
    value: "{{ item.value | string }}"
  register: gnome_result
  # Using W/A for complicated string values in "custom-keybindings",
  # where Ansible thinks, that value has changed, while it hasn't.
  # For example:
  # /org/.../custom-keybindings/custom1/command: '"bash -c ''flameshot gui &> /tmp/flameshot_log_$USER''"'
  # Ansible misinterprets this as changed (supposedly) due to complicated parsing of qoutes.
  changed_when: gnome_result.changed and 'custom-keybindings' not in item.key
  loop: "{{ gnome_settings | dict2items }}"
