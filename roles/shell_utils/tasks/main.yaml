- name: Create atuin directory
  ansible.builtin.file:
    path: "{{ home }}/.config/atuin"
    state: directory
    mode: "0o755"

- name: Install atuin config
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/atuin/config.toml"
    dest: "{{ home }}/.config/atuin/config.toml"
    force: true # Atuin config is pretty persistent if done softly.
    state: link

- name: Setup yazi
  vars:
  block:
    - name: Create symlink to yazi configs
      ansible.builtin.file:
        src: "{{ role_host_path }}/files/yazi"
        dest: "{{ home }}/.config/yazi"
        state: link

- name: Download fisher
  ansible.builtin.get_url:
    url: https://git.io/fisher
    dest: "{{ home }}/.config/fish/functions/fisher.fish"
    mode: "0o755"
  retries: "{{ web_retries }}"
  delay: "{{ web_delay }}"
  register: shell_utils_downloaded
  until: shell_utils_downloaded is not failed

- name: Create symlink to fish_plugins
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/fish_plugins"
    dest: "{{ home }}/.config/fish/fish_plugins"
    state: link

- name: Create oh-my-posh directory
  ansible.builtin.file:
    path: "{{ home }}/.config/oh-my-posh/themes"
    state: directory
    mode: "0o755"

- name: Install oh-my-posh custom theme
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/theme.json"
    dest: "{{ home }}/.config/oh-my-posh/theme.json"
    state: link

- name: Install oh-my-posh themes
  ansible.builtin.unarchive:
    src: "{{ manifest.oh_my_posh_themes.url }}"
    dest: "{{ home }}/.config/oh-my-posh/themes"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  retries: "{{ web_retries }}"
  delay: "{{ web_delay }}"
  register: shell_utils_downloaded
  until: shell_utils_downloaded is not failed

- name: Install fisher plugins
  ansible.builtin.shell: |
    set -o pipefail
    set -x TERM xterm-256color
    fisher update
  args:
    executable: "{{ home }}/.local/bin/fish"
  changed_when: false

- name: Create symlink to cmd.exe
  ansible.builtin.file:
    src: "/mnt/c/Windows/System32/cmd.exe"
    dest: "{{ home }}/.local/bin/cmd.exe"
    state: link
  when: in_wsl

- name: Set up bash
  ansible.builtin.lineinfile:
    path: "{{ home }}/.bashrc"
    regexp: "source .*/{{ role_name }}/files"
    line: source {{ role_host_path }}/files/bash.sh

- name: Create symlink to fish config
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/{{ role_name }}.fish"
    dest: "{{ home }}/.config/fish/conf.d/{{ role_name }}.fish"
    state: link

- name: Create symlink to nu config
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/{{ role_name }}.nu"
    dest: "{{ home }}/.config/nushell/autoload/{{ role_name }}.nu"
    state: link

- name: Create symlinks to fish functions
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/fish_functions/{{ item | basename }}"
    dest: "{{ home }}/.config/fish/functions/{{ item | basename }}"
    state: link
  loop: "{{ lookup('fileglob', '{{ role_path }}/files/fish_functions/*', wantlist=True) }}"
  register: shell_utils_functions

# git diff -U0 -p --no-index --no-prefix -- a/functions/ b/functions/ >
# ~/projects/dotfiles/roles/shell_utils/files/fzf.fish.patch
- name: Patch fzf - fix focus events and add ripgrep support
  ansible.posix.patch:
    src: "{{ role_path }}/files/fzf.fish.patch"
    basedir: "{{ home }}/.config/fish"
    strip: 1
  changed_when: shell_utils_functions is changed
