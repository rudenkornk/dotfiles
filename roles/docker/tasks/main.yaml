- name: Add to docker group {{ ansible_user }}
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Create ~/.docker dir
  ansible.builtin.file:
    path: "{{ home }}/.docker"
    state: directory
    mode: "0o755"

- name: Create ~/.docker/config.json
  ansible.builtin.shell: |
    set -o pipefail
    config={{ home }}/.docker/config.json
    if [[ ! -f $config || ! -s $config ]]; then
      echo "{}" > $config
    fi
    # Do not create symbolic because it might be populated with docker credentials
    jq -s '.[0] * .[1]' "{{ role_host_path }}/files/config.json" "$config" | sponge $config
  args:
    executable: bash
  changed_when: false

- name: Install fish completions
  ansible.builtin.get_url:
    url: "{{ docker_fish_url }}"
    dest: "{{ home }}/.config/fish/completions/docker.fish"
    mode: "0o755"
    force: true
  retries: "{{ web_retries }}"
  delay: "{{ web_delay }}"
  register: docker_downloaded
  until: docker_downloaded is not failed

- name: Set up bash
  ansible.builtin.lineinfile:
    path: "{{ home }}/.bashrc"
    regexp: "source .*/{{ role_name }}/files"
    line: source {{ role_host_path }}/files/bash.sh

- name: Create symlinks to fish functions
  ansible.builtin.file:
    src: "{{ role_host_path }}/files/fish_functions/{{ item | basename }}"
    dest: "{{ home }}/.config/fish/functions/{{ item | basename }}"
    state: link
  loop: "{{ lookup('fileglob', '{{ role_path }}/files/fish_functions/*', wantlist=True) }}"
