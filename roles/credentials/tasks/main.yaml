# These tasks may be included outside of the role,
# so load vars explicitly
- name: Load credentials vars
  ansible.builtin.include_vars:
    file: "{{ playbook_dir }}/roles/credentials/vars/main.yaml"

- name: Check if inside container
  ansible.builtin.shell: ([[ -f /.dockerenv || -f /run/.containerenv ]]) && echo true || echo false
  args:
    executable: bash
  changed_when: false
  register: credentials_container_out

- name: Set in_container status
  ansible.builtin.set_fact:
    in_container: "{{ credentials_container_out.stdout }}"

- name: Check if credentials are decrypted locally
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ credentials_local_path }}"
  register: credentials_vars_status

- name: Set credentials
  ansible.builtin.set_fact:
    secrets_hashed_pass: "{{ secrets_creds.password | password_hash(salt=secrets_creds.salt) }}"
    secrets_pass: "{{ secrets_creds.password }}"
  vars:
    secrets_creds: "{{ lookup('ansible.builtin.file', credentials_local_path) | from_json }}"
  no_log: true
  # Do not set credentials in containers
  # See https://github.com/ansible/ansible/issues/80254
  when: credentials_vars_status.stat.exists and not in_container

- name: Set default credentials
  ansible.builtin.set_fact:
    secrets_hashed_pass: ""
    secrets_pass: ""
  when: not credentials_vars_status.stat.exists or in_container

- name: Set password for {{ secrets_user }}
  become: true
  ansible.builtin.user:
    name: "{{ secrets_user }}"
    password: "{{ secrets_hashed_pass }}"

- name: Set ansible_sudo_pass
  ansible.builtin.set_fact:
    ansible_sudo_pass: "{{ secrets_pass }}"
  no_log: true
  when: ansible_user == secrets_user
