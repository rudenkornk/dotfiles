[project]
name = "dotfiles"
version = "1.0.0"
description = "Ansible playbooks for setting up personal machines."
readme = "readme.md"
# Python 3.12.5 has a memory safety issue that can cause 
# Black's AST safety checks to fail.
requires-python = ">=3.11,!=3.12.5"
license = "MIT"

dependencies = [
  "ansible-lint>=24.12.2 ; sys_platform != 'win32'",
  "ansible-core>=2.17.3",
  "black>=24.8.0",
  "click-help-colors>=0.9.4",
  "click>=8.1.7",
  "gitpython>=3.1.43",
  "graphviz>=0.20.3",
  "isort>=5.13.2",
  "luadata>=1.0.5",
  "mypy>=1.11.1",
  "passlib>=1.7.4",
  "psutil>=6.0.0",
  # Limit pydriller version since it requires git >= 2.38
  # Whereas Ubuntu 22.04 only has 2.34
  "pydriller<2.7",
  "pylint>=3.2.6",
  "requests>=2.32.3",
  "ruamel-yaml>=0.18.6",
  "semver>=3.0.4",
  "types-requests>=2.32.0.20240712",
  "types-urllib3>=1.26.25.14",
  "yamllint>=1.35.1",
  "ruff>=0.7.1",
  "typos>=1.31.1",
  "rich>=14.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dotfiles_py"]

[project.scripts]
dotfiles = "dotfiles_py:cli.main"

[tool.uv]
# W/A for ansible-lint
# For some reason ansible-lint-specific sys_platform marker is not working
environments = ["sys_platform != 'win32'"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]

ignore = [
  # warning: `one-blank-line-before-class` (D203) and
  #          `no-blank-line-before-class`  (D211) are incompatible.
  #          Ignoring `one-blank-line-before-class`.
  "D203",
  # warning: `multi-line-summary-first-line`  (D212) and
  #          `multi-line-summary-second-line` (D213) are incompatible.
  #          Ignoring `multi-line-summary-second-line`.
  "D213",
  # "Missing docstring"
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D107",
  # "Logging statement uses f-string"
  # I personally don't find performance concerns reasonable enough.
  "G004",
  # "Prefer absolute imports over relative imports from parent modules"
  "TID252",
  # "Avoid specifying long messages outside the exception class"
  "TRY003",
  # "Consider moving this statement to an `else` block"
  # I find `try-except-else` more confusing than this rule suggests.
  "TRY300",


  # warning: The following rules may cause conflicts when used with the formatter: `COM812`, `ISC001`.
  # COM812: Checks for the absence of trailing commas.
  # ISC001: Checks for implicitly concatenated strings on a single line.
  "COM812",
  "ISC001",
]


[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true

[tool.pylint]
max-line-length = 120
disable = [
  "logging-fstring-interpolation",
  "logging-not-lazy",
  "missing-docstring",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-locals",
  "too-many-branches",
  "too-many-instance-attributes",
]

# https://stackoverflow.com/a/78218489/8099151
[tool.pylint.typecheck]
signature-mutators = [
  "click.decorators.option",
  "click.decorators.argument",
  "click.decorators.version_option",
  "click.decorators.help_option",
  "click.decorators.pass_context",
  "click.decorators.confirmation_option",
  "dotfiles_py.utils.makelike",
]

[tool.typos]
# See https://github.com/crate-ci/typos/blob/master/docs/reference.md#example-configurations
default.extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*typos:\\s*ignore$",
  "(?s)(#|//)\\s*typos:\\s*off.*?(#|//)\\s*typos:\\s*on",
]
files.extend-exclude = [
  "lazy-lock.json",
  "*.sops.yaml",
]

[tool.mypy]
strict = true
# W/A for errors like this one:
# error: Skipping analyzing "ruamel": module is installed, but missing library stubs or py.typed marker  [import-untyped]
# https://github.com/python/mypy/issues/12664
# https://github.com/python/mypy/issues/7276
incremental = false

[tool.pydocstyle]
ignore = ["D100", "D103"]
