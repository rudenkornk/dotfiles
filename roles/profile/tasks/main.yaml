- name: Install sudo
  become: true
  ansible.builtin.apt:
    name: sudo

- name: Load dotfiles vars
  ansible.builtin.include_vars:
    file: "{{ playbook_dir }}/roles/dotfiles/vars/main.yaml"

- name: Set credentials_path var
  ansible.builtin.set_fact:
    credentials_path: "{{ dotfiles_path }}/{{ credentials_dir }}"

- name: Check if credentials were decrypted
  ansible.builtin.stat:
    path: "{{ credentials_path }}"
  register: creds_status

- name: Read credentials
  ansible.builtin.slurp:
    src: "{{ credentials_path }}"
  register: encoded_creds
  when: creds_status.stat.exists

- name: Set credentials
  ansible.builtin.set_fact:
    password: "{{ creds.password | password_hash(salt=creds.salt) }}"
    ansible_sudo_pass: "{{ creds.password }}"
  vars:
    creds: "{{ encoded_creds['content'] | b64decode | from_json }}"
  when: creds_status.stat.exists

- name: Set default credentials
  ansible.builtin.set_fact:
    password: ""
  when: not creds_status.stat.exists

- name: Add user "{{ user }}"
  become: true
  ansible.builtin.user:
    name: "{{ user }}"
    password: "{{ password }}"
    groups:
      - adm
      - sudo
    append: true

- name: Add authorized_key for {{ user }}
  become: true
  ansible.posix.authorized_key:
    user: "{{ user }}"
    key: "{{ lookup('file', '{{ playbook_dir }}/{{ ssh_dir }}/id_rsa.pub') }}"

- name: Switch ansible_user
  ansible.builtin.set_fact:
    ansible_user: "{{ user }}"
