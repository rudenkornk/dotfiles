- name: Install ssh tools
  become: true
  ansible.builtin.package:
    name:
      - "{{ {'Ubuntu': 'libssl-dev', 'Fedora': 'openssl-devel'}[ansible_distribution] }}"
      - openssh-server

- name: Enable public key authentication
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '[ #]{0,10}PubkeyAuthentication \w*\s*$'
    line: PubkeyAuthentication yes
  register: ssh_config_1

- name: Disable password authentication
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '[ #]{0,10}PasswordAuthentication \w*\s*$'
    line: PasswordAuthentication no
  register: ssh_config_2

- name: Disable keyboard interactive authentication
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '[ #]{0,10}KbdInteractiveAuthentication \w*\s*$'
    line: KbdInteractiveAuthentication no
  register: ssh_config_3

- name: Disable challenge response authentication
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '[ #]{0,10}ChallengeResponseAuthentication \w*\s*$'
    line: ChallengeResponseAuthentication no
  register: ssh_config_4

- name: Disable UsePAM
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '[ #]{0,10}UsePAM \w*\s*$'
    line: UsePAM no
  register: ssh_config_4

- name: Try load encrypted ssh config
  community.sops.load_vars:
    file: ssh_server_config.sops.yaml
  register: ssh_server_vars_loaded
  ignore_errors: true

- name: Set private config options
  when: not ssh_server_vars_loaded.failed
  block:
    - name: Get host config
      ansible.builtin.set_fact:
        ssh_server_config: "{{ ssh_server_config_map[ssh_server_config_kind] }}"
      vars:
        ssh_server_config_kind: "{{ hostvars[inventory_hostname].ssh_kind | default('default_kind') }}"
      no_log: true

    - name: Set sshd port
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: '[ #]{0,10}Port \w*\s*$'
        line: Port {{ ssh_server_config.port }}
      register: ssh_port_status
      no_log: true

- name: Restart sshd
  become: true
  ansible.builtin.service:
    name: sshd
    state: restarted
  when: not in_container and (
    ssh_config_1.changed or
    ssh_config_2.changed or
    ssh_config_3.changed or
    ssh_config_4.changed or
    ssh_port_status.changed or
    false
    )

- name: Set ansible port
  become: true
  ansible.builtin.set_fact:
    ansible_port: "{{ ssh_server_config.port }}"
  no_log: true
  when: not ssh_server_vars_loaded.failed
