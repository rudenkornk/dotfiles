- name: Check if gpg key is installed
  ansible.builtin.shell: |
    set -o pipefail
    gpg --list-secret-keys | grep {{ profile.gpg_email }} --quiet && echo "secret key imported" || true
  args:
    executable: bash
  register: secrets_gpg_imported
  changed_when: false

- name: Try export gpg key
  delegate_to: localhost
  when: ("secret key imported" not in secrets_gpg_imported.stdout) and trusted
  block:
    - name: Try export gpg key
      ansible.builtin.shell: |
        set -o pipefail
        if ! command -v gpg &> /dev/null; then
          echo "not exported" >&2
          exit
        fi
        gpg --output "{{ secrets_gpg_key_local_path }}" --armor --export-secret-key {{ profile.gpg_email }}
      args:
        executable: bash
        creates: "{{ secrets_gpg_key_local_path }}"
      changed_when: secrets_gpg_exported.stderr == ""
      register: secrets_gpg_exported

    - name: Check if gpg key exported
      ansible.builtin.stat:
        path: "{{ secrets_gpg_key_local_path }}"
      register: secrets_gpg_key

- name: Import gpg key
  when: >
    ("secret key imported" not in secrets_gpg_imported.stdout) and
    secrets_gpg_key.stat.exists and trusted
  block:
    - name: Copy gpg key
      ansible.builtin.copy:
        src: "{{ secrets_gpg_key_local_path }}"
        dest: "{{ secrets_gpg_key_path }}"
        mode: "0o600"

    - name: Import gpg key
      ansible.builtin.shell: |
        gpg --import "{{ secrets_gpg_key_path }}" 2>&1
      args:
        executable: bash
      register: secrets_gpg_imported_now
      changed_when: >
        ("secret key imported" in secrets_gpg_imported_now.stdout) and
        ("secret keys unchanged" not in secrets_gpg_imported_now.stdout)

- name: Decrypt git secrets
  ansible.builtin.shell: |
    set -o pipefail
    git secret reveal -f
    git secret list | xargs chmod 600
  args:
    executable: bash
    chdir: "{{ dotfiles_path }}"
  when: ("secret key imported" in secrets_gpg_imported.stdout) or (secrets_gpg_imported_now is not skipped)
  changed_when: false

# See https://github.com/ansible/ansible/issues/80254
- name: Do not set credentials in containers
  ansible.builtin.file:
    path: "{{ secrets_credentials_path }}"
    state: absent
  when: in_container
  changed_when: false

- name: Check if credentials were decrypted
  ansible.builtin.stat:
    path: "{{ secrets_credentials_path }}"
  register: secrets_creds_status

- name: Read credentials
  ansible.builtin.slurp:
    src: "{{ secrets_credentials_path }}"
  register: secrets_encoded_creds
  when: secrets_creds_status.stat.exists

- name: Update user credentials after secrets decryption
  vars:
    secrets_creds: "{{ secrets_encoded_creds['content'] | b64decode | from_json }}"
  when: secrets_creds_status.stat.exists
  # This block is to preserve idempotence
  block:
    - name: Update user password
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        password: "{{ secrets_creds.password | password_hash(salt=secrets_creds.salt) }}"

    - name: Set ansible_sudo_pass
      ansible.builtin.set_fact:
        ansible_sudo_pass: "{{ secrets_creds.password }}"
      no_log: true
      tags:
        # TODO: see https://github.com/ansible/ansible-lint/issues/3456
        - skip_ansible_lint
